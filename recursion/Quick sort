#include<iostream>
using namespace std;
/*********************** sort an array   using recursion *****************************/
int partition(int arr[],int s,int e){
    int pivot=arr[s];
    int count=0;
    for(int i=s+1;i<=e;i++){
        if(arr[i]<=pivot) count++;
    }
    int pivotindex=s+count;
    swap(arr[pivotindex],arr[s]);
    int i=s,j=e;
    while(i<pivotindex and j>pivotindex){
        while(arr[i]<pivot) i++;
        while(arr[j]>pivot) j--;
        if(i<pivotindex and j>pivotindex) swap(arr[i++],arr[j--]);
    }
    return pivotindex;
}
void quicksort(int arr[],int s,int e){
    //base case
    if(s>=e) return ;

    int p=partition(arr,s,e);
    //left part sort
    quicksort(arr,s,p-1);
    //right part sort
    quicksort(arr,p+1,e);

    
}
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    quicksort(arr,0,n-1);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}
