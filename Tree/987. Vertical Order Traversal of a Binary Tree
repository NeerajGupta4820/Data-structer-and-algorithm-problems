class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>>nodes;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        while(!q.empty()){
            pair<TreeNode*,pair<int,int>>temp=q.front();
            q.pop();

            TreeNode* frontNode=temp.first;
            int hd=temp.second.first;
            int lvl=temp.second.second;

            nodes[hd][lvl].insert(frontNode->val);
            
            if(frontNode->left)
                q.push({frontNode->left,{hd-1,lvl+1}});
            if(frontNode->right)
                q.push({frontNode->right,{hd+1,lvl+1}});
        }
        vector<vector<int>>ans;
        for(auto i:nodes){
            vector<int>v;
             for(auto j : i.second) {
                v.insert(v.end(), j.second.begin(), j.second.end());
            }
            ans.push_back(v);
        }
        return ans;
    }
};
