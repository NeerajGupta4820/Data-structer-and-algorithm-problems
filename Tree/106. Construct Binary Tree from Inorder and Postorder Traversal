/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(vector<int>&inorder,vector<int>& postorder,int start,int end,int &ind){
        if(start>end) return NULL;
        int val=postorder[ind--];
        int i=0;
        for(;i<=end;i++){
            if(inorder[i]==val)
                break;
        }
        TreeNode* root=new TreeNode(val);
        root->right=solve(inorder,postorder,i+1,end,ind);
        root->left=solve(inorder,postorder,start,i-1,ind);
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int ind=postorder.size()-1;
        return solve(inorder,postorder,0,inorder.size()-1,ind);
    }
};
