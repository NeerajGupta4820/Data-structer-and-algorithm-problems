/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans=0;
    void helper(TreeNode* root,vector<int>&temp){
        if(!root)return ;
        temp[root->val]++;
        if(root->left==NULL and root->right==NULL){
            int oddfreq=0;
            for(int i=1;i<=9;i++){
                if(temp[i]%2!=0) oddfreq++;
            }
            if(oddfreq<=1) ans++;
        }
        helper(root->left,temp);
        helper(root->right,temp);
         temp[root->val]--;
    }
    int pseudoPalindromicPaths (TreeNode* root) {
        vector<int>temp(10, 0)  ;
        helper(root,temp);
        return ans;
    }
};
