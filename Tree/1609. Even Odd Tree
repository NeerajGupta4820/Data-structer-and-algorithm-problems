/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        if(!root) return true;
        bool flag=true;
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            int size=q.size();
            int prev=flag?INT_MIN:INT_MAX; 
            while(size--){
                auto frontNode=q.front();
                q.pop();
                if(flag){
                    if(frontNode->val%2==0 || frontNode->val<=prev) return false;
                }
                else {
                    if(frontNode->val%2!=0 || frontNode->val>=prev) return false;
                }
                if(frontNode->left)q.push(frontNode->left);
                if(frontNode->right)q.push(frontNode->right);
                prev=frontNode->val;
            }
            flag=!flag;
        }
        return true;
    }
};
