/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> solve(int s,int e){
        vector<TreeNode*>ans;
        if(s>e) return {NULL};
        if(s==e) return {new TreeNode(s)};
        for(int i=s;i<=e;i++){
            vector<TreeNode*>left=solve(s,i-1);
            vector<TreeNode*>right=solve(i+1,e);
            for(auto l:left)
                for(auto r:right) ans.push_back(new TreeNode(i,l,r));
        }
        return ans;
    }
    vector<TreeNode*> generateTrees(int n) {
        vector<TreeNode*>ans=solve(1,n);
        return ans;
    }
};
