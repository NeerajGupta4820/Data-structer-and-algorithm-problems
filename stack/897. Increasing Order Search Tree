/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    stack<TreeNode*>st;
    void dfs(TreeNode* root){
        if(root==nullptr) return;
        if(root->right) dfs(root->right);
        st.push(root);
        if(root->left) dfs(root->left);
    }
    TreeNode* increasingBST(TreeNode* root) {
        dfs(root);
        if(st.empty())return nullptr;
        TreeNode* res=st.top();
        st.pop();
        TreeNode* temp=res;
        while(temp and !st.empty()){
            temp->right=st.top();
            temp->left=nullptr;
            st.pop();
            temp=temp->right;
        }
        temp->left=nullptr;
        temp->right=nullptr;
        return res;
    }
};
