class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int rows=image.size();
        int cols=image[0].size();
        queue<pair<int,int>>q;

        int originalcolor=image[sr][sc];
        if (originalcolor == color) return image;
        q.push({sr,sc});
        image[sr][sc] = color;
        
        while(!q.empty()){
            int size=q.size();
            while(size--){
                auto [x,y]=q.front();
                q.pop();
                if(x-1>=0 && image[x-1][y]==originalcolor){
                        image[x-1][y]=color;
                        q.push({x-1,y});
                }
                if(x+1<rows && image[x+1][y]==originalcolor){
                        image[x+1][y]=color;
                        q.push({x+1,y});
                }
                if(y-1>=0 && image[x][y-1]==originalcolor){
                        image[x][y-1]=color;
                        q.push({x,y-1});
                }
                if(y+1<cols && image[x][y+1]==originalcolor){
                        image[x][y+1]=color;
                        q.push({x,y+1});
                }
            }
        }   
        return image;
    }
};
