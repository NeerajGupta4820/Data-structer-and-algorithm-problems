//link of the problem: https://practice.geeksforgeeks.org/problems/rotation4723/1

//User function template for C++
class Solution{
public:	
	int findKRotation(int arr[], int n) {
	    // code here
	    if(arr[0]<arr[n-1] ) return 0; 
	    int s=0,e=n-1;
	    while(s<e){
	        int mid=s+(e-s)/2;
	        if(arr[mid]>=arr[0]) s=mid+1;
	        else e=mid;
	        
	    }	    
	    return s;
	}

};

///////////////////////////////////////////////////////////

class Solution{
public:	
	int findKRotation(int arr[], int n) {
	    // code here
	    if(arr[0]<arr[n-1] ) return 0; 
	    int s=0,e=n-1;
	    while(s<e){
	        int mid=s+(e-s)/2;
	        if(mid+1<n and arr[mid]>arr[mid+1]) return mid+1;
	        if(mid-1>=0 and arr[mid-1]>arr[mid]) return mid;
	        if(arr[s]>=arr[mid]) e=mid-1;
	        else s=mid;
	    }	    
	    return 0;
	}

};



