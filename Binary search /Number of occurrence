//link of the problem: https://practice.geeksforgeeks.org/problems/number-of-occurrence2259/1


class Solution{
    
    int num1(int arr[], int n, int x){
        int s=0;
        int e=n-1;
        int ans1=-1;
        
        while(s <= e){
            int mid = s + (e - s) / 2;  // To avoid integer overflow
            if(arr[mid] == x){
                ans1 = mid;
                e = mid - 1;
            }
            else if(arr[mid] < x){
                s = mid + 1;
            }
            else{
                e = mid - 1;
            }
        }
        
        return ans1;
    }
    
    int num2(int arr[], int n, int x){
        int s=0;
        int e=n-1;
        int ans2=-1;
        
        while(s <= e){
            int mid = s + (e - s) / 2;  // To avoid integer overflow
            if(arr[mid] == x){
                ans2 = mid;
                s = mid + 1;
            }
            else if(arr[mid] < x){
                s = mid + 1;
            }
            else{
                e = mid - 1;
            }
        }
        
        return ans2;
    }
    
public:
    int count(int arr[], int n, int x) {
        int ans1 = num1(arr, n, x);
        int ans2 = num2(arr, n, x);
        
        if (ans1 == -1) {
            return 0;  // Element not found
        }
        
        int count = ans2 - ans1 + 1;
        return count;
    }
};
