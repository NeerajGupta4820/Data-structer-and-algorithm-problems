//link of the problem : https://practice.geeksforgeeks.org/problems/gold-mine-problem2608/1

class Solution{
public:
    int solvemem(int i,int j,vector<vector<int>>&M,vector<vector<int>>& dp){
        if(j==0 ) return M[i][j];
        if(dp[i][j]!=-1) return dp[i][j];
        
        int right=INT_MIN;
        int up=INT_MIN;
        int down=INT_MIN;
        if(j-1>=0) right=M[i][j]+solvemem(i,j-1,M,dp);
        if(i-1>=0 && j-1>=0) up=M[i][j]+solvemem(i-1,j-1,M,dp);
        if(i+1<M.size() && j>=0) down=M[i][j]+solvemem(i+1,j-1,M,dp);
        return dp[i][j]=max(right,max(up,down));
    }
    int maxGold(int n, int m, vector<vector<int>> M)
    {
        // code here
        int ans=INT_MIN;
        vector<vector<int>>dp(n,vector<int>(m+1,-1));
        for(int i=0;i<n;i++){
            int ans2=solvemem(i,m-1,M,dp);
            ans=max(ans,ans2);
        }
        return ans;
    }
};
