//link of the problem:  https://practice.geeksforgeeks.org/problems/cutted-segments1642/1


/***************************************memoization**************************************
class Solution
{
    public:
    //Function to find the maximum number of cuts.
    int solve(int n,int x,int y,int z,vector<int>&dp){
        if(n==0) return 0;
        if(n<0) return INT_MIN;
        if(dp[n]!=-1) return dp[n];
        int a=1+solve(n-x,x,y,z,dp);
        int b=1+solve(n-y,x,y,z,dp);
        int c=1+solve(n-z,x,y,z,dp);
        return dp[n]=max(a,max(b,c));
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        vector<int>dp(n+1,-1);
        int ans=solve(n,x,y,z,dp);
        if(ans<0) return 0;
        return ans;
    }
};

/***************************************memoization**************************************
class Solution
{
    public:
    //Function to find the maximum number of cuts.
    int solve(int n,int x,int y,int z){
        vector<int>dp(n+1,INT_MIN);
        dp[0]=0;
        for(int i=1;i<=n;i++){
            if(i-x>=0)
                dp[i]=max(dp[i],dp[i-x]+1);
            if(i-y>=0)
                dp[i]=max(dp[i],dp[i-y]+1);
            if(i-z>=0)
                dp[i]=max(dp[i],dp[i-z]+1);
                
        }
        if(dp[n]<0)  return 0;
        return dp[n];
        
    }
    int maximizeTheCuts(int n, int x, int y, int z)
    {
        //Your code here
        int ans=solve(n,x,y,z);
        return ans;
    }
};
